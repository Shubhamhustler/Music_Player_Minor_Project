/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package music.player;

import jaco.mp3.player.MP3Player;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author binda
 */
public class MainPage extends javax.swing.JFrame {

    /**
     * Creates new form MainPage
     */
     ImageIcon icon;
     String currentDirectory = "home.user";
     Boolean repeat = true;
     Boolean split = false;
     Boolean music1 = true;
     Timer timer ;
     Clip clip;
      int count=0;
     String abc;
    File filename;
    long duration;
    private Clip audioClip;
	
	
       
  
    public MainPage() {
        initComponents();
        //s1.setValue(0);
    }
  String song = "";
  //String content = new String(Files.readAllBytes(Paths.get(filename)));
   MP3Player mp3player = new MP3Player(new File(song));
   long hour = 0;
		long minute = 0;
		      
  
 
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        stop = new javax.swing.JLabel();
        lbl12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblR = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        mute = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblT = new javax.swing.JLabel();
        lblN = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        hover = new javax.swing.JLabel();
        mute1 = new javax.swing.JLabel();
        Ivol = new javax.swing.JLabel();
        stop1 = new javax.swing.JLabel();
        play = new javax.swing.JLabel();
        pause = new javax.swing.JLabel();
        low_vol = new javax.swing.JLabel();
        max_vol = new javax.swing.JLabel();
        loop = new javax.swing.JLabel();
        music = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/pexels-torsten-dettlaff-347700.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -10, 430, 620);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 510));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel2MouseMoved(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/music (1).png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 49, 146, 141));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setForeground(new java.awt.Color(102, 255, 0));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 126, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 311, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 203, -1, -1));

        stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/stop-button.png"))); // NOI18N
        stop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                stopMouseMoved(evt);
            }
        });
        stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopMouseClicked(evt);
            }
        });
        jPanel2.add(stop, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 30, 70));

        lbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/play-button (4).png"))); // NOI18N
        lbl12.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lbl12MouseMoved(evt);
            }
        });
        lbl12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl12MouseClicked(evt);
            }
        });
        jPanel2.add(lbl12, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 420, 70, 70));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/file (1).png"))); // NOI18N
        jLabel7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel7MouseMoved(evt);
            }
        });
        jLabel7.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jLabel7MouseWheelMoved(evt);
            }
        });
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel7MouseReleased(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, 60));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/volume-up.png"))); // NOI18N
        jLabel8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel8MouseMoved(evt);
            }
        });
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, 30, 50));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/volume-up-interface-symbol (1).png"))); // NOI18N
        jLabel9.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel9MouseMoved(evt);
            }
        });
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 430, -1, 50));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 470, 10));

        lblR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/exchange (1).png"))); // NOI18N
        lblR.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblRMouseMoved(evt);
            }
        });
        lblR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRMouseClicked(evt);
            }
        });
        jPanel2.add(lblR, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 420, 30, 70));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/minimize.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, -1, 30));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/volume-down.png"))); // NOI18N
        jLabel10.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel10MouseMoved(evt);
            }
        });
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 430, -1, 50));

        mute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/no-sound (1).png"))); // NOI18N
        mute.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                muteMouseMoved(evt);
            }
        });
        mute.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                muteMouseClicked(evt);
            }
        });
        jPanel2.add(mute, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, -1, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/pause (1).png"))); // NOI18N
        jLabel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel4MouseMoved(evt);
            }
        });
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 30, 70));

        lblT.setFont(new java.awt.Font("SimSun", 1, 13)); // NOI18N
        lblT.setForeground(new java.awt.Color(0, 102, 102));
        jPanel2.add(lblT, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 210, 30));
        jPanel2.add(lblN, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 190, 20));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/close-button (1).png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 30, 30));

        hover.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.add(hover, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 50, 20));
        jPanel2.add(mute1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 40, 20));
        jPanel2.add(Ivol, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, 40, 20));
        jPanel2.add(stop1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 470, 40, 20));

        play.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.add(play, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, 40, 20));
        jPanel2.add(pause, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 470, 40, 20));
        jPanel2.add(low_vol, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 470, 40, 20));
        jPanel2.add(max_vol, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 470, 50, 20));
        jPanel2.add(loop, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 470, 40, 20));
        jPanel2.add(music, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 140, 50));

        jLabel3.setFont(new java.awt.Font("Wide Latin", 1, 14)); // NOI18N
        jLabel3.setText("Melody MP3 Player");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 260, 50));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 470, 510));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        
      
        JFileChooser openFile = new JFileChooser(currentDirectory);
        openFile.setAcceptAllFileFilterUsed(false);
      FileNameExtensionFilter extFilter = new FileNameExtensionFilter("MP3 file", "mp3");
      openFile.addChoosableFileFilter(extFilter);
        int result = openFile.showOpenDialog(null);
        
        if(result == JFileChooser.APPROVE_OPTION){
            filename = openFile.getSelectedFile();
           //Duration d = mp3player.getCurrentTime();
           
           
            
            mp3player.addToPlayList(filename);
           mp3player.skipForward();
          //  media =new Media(filename.toURI().toString());
           // mediaPlayer = new MediaPlayer(media);
            


            timer = new Timer(1000,new ActionListener(){
           
            @Override
            public void actionPerformed(ActionEvent ae) {
                  
               
                 //s1.setValue(count++);
//                 p1.setValue(count++);
                

                                 
               //duration = (long) mediaPlayer.getCurrentTime().toSeconds();
               //double end = media.getDuration().toSeconds();
               //System.out.println(duration/end);

               
             }
        });
        timer.start();
            currentDirectory = filename.getAbsolutePath();
            song = filename.getAbsolutePath();
            lblN.setText("Now Playing...");
            lblT.setText(filename.getName());
            if(music1==true){
            music.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/Equalizer.gif")));
            }
            else if(music1==false)
            {
                music.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
            }
             
        }
    }//GEN-LAST:event_jLabel7MouseClicked

    private void lbl12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl12MouseClicked
     
       lbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/play-button (4).png")));        
       music.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/Equalizer.gif")));
       mp3player.play(); 
         timer = new Timer(5000,new ActionListener(){
           
            @Override
            public void actionPerformed(ActionEvent ae) {
//                 p1.setValue(count++);
             }
        });
        timer.start();
        
        
        
    }//GEN-LAST:event_lbl12MouseClicked

 
 
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
       this.setExtendedState(MainPage.ICONIFIED);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseClicked
    mp3player.stop(); 
   
     timer.stop();
    music.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));  
    }//GEN-LAST:event_stopMouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        
        volumeUpControl(0.1);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        volumeDownControl(0.1);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        volumeControl(1.0);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void muteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_muteMouseClicked
          volumeControl(0.0);
    }//GEN-LAST:event_muteMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        lbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/onclick.png")));        
        mp3player.pause(); 
        music.setIcon(new javax.swing.ImageIcon(getClass().getResource("")));
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
       System.exit(0);
    }//GEN-LAST:event_jLabel15MouseClicked

    private void lblRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRMouseClicked
      // lblR = new javax.swing.JLabel();
     if(split == false)
     {
         split = true;
      lblR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/repeat-button.png")));
       //lblR.setIcon(new ImageIcon("/music/player/images/repeat-button.png"));
       
       mp3player.setRepeat(split);
       
        
     }
     else if(split == true)
     {
        lblR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/music/player/images/exchange (1).png")));
       //lblR.setIcon(new ImageIcon("/music/player/images/exchange (1).png"));
       split = false;
       mp3player.setRepeat(split);
       //repeat = false;
     }
     
    }//GEN-LAST:event_lblRMouseClicked

    private void jLabel7MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseMoved
         hover.setText("Browse");
      
    }//GEN-LAST:event_jLabel7MouseMoved

    private void jLabel7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseReleased
       
    }//GEN-LAST:event_jLabel7MouseReleased

    private void jLabel7MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jLabel7MouseWheelMoved
         
    }//GEN-LAST:event_jLabel7MouseWheelMoved

    private void jPanel2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseMoved
        hover.setText("");
        mute1.setText("");
        Ivol.setText("");
        stop1.setText("");
        play.setText("");
        pause.setText("");
        low_vol.setText("");
        max_vol.setText("");
        loop.setText("");
        
    }//GEN-LAST:event_jPanel2MouseMoved

    private void muteMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_muteMouseMoved
       mute1.setText("Mute");
        
    }//GEN-LAST:event_muteMouseMoved

    private void jLabel8MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseMoved
       Ivol.setText("+Vol");
    }//GEN-LAST:event_jLabel8MouseMoved

    private void stopMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseMoved
       stop1.setText("Stop");
    }//GEN-LAST:event_stopMouseMoved

    private void lbl12MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl12MouseMoved
         play.setText("Play");
    }//GEN-LAST:event_lbl12MouseMoved

    private void jLabel4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseMoved
         pause.setText("Pause");
    }//GEN-LAST:event_jLabel4MouseMoved

    private void jLabel10MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseMoved
        low_vol.setText("-vol");
    }//GEN-LAST:event_jLabel10MouseMoved

    private void jLabel9MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseMoved
         max_vol.setText("Max Vol");
    }//GEN-LAST:event_jLabel9MouseMoved

    private void lblRMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRMouseMoved
        loop.setText("Loop");
    }//GEN-LAST:event_lblRMouseMoved
 /* public static void f1()
  {
      
      m.setVisible(true);
      try{
          for(int i=0;i<=100;i++)
          {
              Thread.sleep(100);
              m.loading.setText(i+"%");
          }
          
      }
      catch(Exception ae)
      {
          
      }
  }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ivol;
    private javax.swing.JLabel hover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl12;
    private javax.swing.JLabel lblN;
    private javax.swing.JLabel lblR;
    private javax.swing.JLabel lblT;
    private javax.swing.JLabel loop;
    private javax.swing.JLabel low_vol;
    private javax.swing.JLabel max_vol;
    private javax.swing.JLabel music;
    private javax.swing.JLabel mute;
    private javax.swing.JLabel mute1;
    private javax.swing.JLabel pause;
    private javax.swing.JLabel play;
    private javax.swing.JLabel stop;
    private javax.swing.JLabel stop1;
    // End of variables declaration//GEN-END:variables
private void volumeDownControl(Double valueToPlusMinus){
        // Get Mixer Information From AudioSystem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        // Now use a for loop to list all mixers
        for(Mixer.Info mixerInfo : mixers){
            // Get Mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            // Now Get Target Line
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            // Here again use for loop to list lines
            for(Line.Info lineInfo : lineInfos){
                // Make a null line
                Line line = null;
                // Make a boolean as opened
                boolean opened = true;
                // Now use try exception for opening a line
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    // Now Check If Line Is not Opened
                    if(!opened){
                        // Open Line
                        line.open();
                    }
                    // Make a float control
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    // Get Current Volume Now
                    float currentVolume = volControl.getValue();
                    // Make a temp double variable and store valuePlusMinus
                    Double volumeToCut = valueToPlusMinus;
                    // Make a float and calculate the addition or subtraction in volume
                    float changedCalc = (float) ((float)currentVolume-(double)volumeToCut);
                    // Now Set This Changed Value Into Volume Line.
                    volControl.setValue(changedCalc);
                    
                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    // Close Line If it opened
                    if(line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
    
    // Let's Set Volume Up Method It's not necessary to remeber this code.
    private void volumeUpControl(Double valueToPlusMinus){
        // Get Mixer Information From AudioSystem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        // Now use a for loop to list all mixers
        for(Mixer.Info mixerInfo : mixers){
            // Get Mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            // Now Get Target Line
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            // Here again use for loop to list lines
            for(Line.Info lineInfo : lineInfos){
                // Make a null line
                Line line = null;
                // Make a boolean as opened
                boolean opened = true;
                // Now use try exception for opening a line
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    // Now Check If Line Is not Opened
                    if(!opened){
                        // Open Line
                        line.open();
                    }
                    // Make a float control
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    // Get Current Volume Now
                    float currentVolume = volControl.getValue();
                    // Make a temp double variable and store valuePlusMinus
                    Double volumeToCut = valueToPlusMinus;
                    // Make a float and calculate the addition or subtraction in volume
                    float changedCalc = (float) ((float)currentVolume+(double)volumeToCut);
                    // Now Set This Changed Value Into Volume Line.
                    volControl.setValue(changedCalc);
                    
                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    // Close Line If it opened
                    if(line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
    private void volumeControl(Double valueToPlusMinus){
        // Get Mixer Information From AudioSystem
        Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        // Now use a for loop to list all mixers
        for(Mixer.Info mixerInfo : mixers){
            // Get Mixer
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            // Now Get Target Line
            Line.Info[] lineInfos = mixer.getTargetLineInfo();
            // Here again use for loop to list lines
            for(Line.Info lineInfo : lineInfos){
                // Make a null line
                Line line = null;
                // Make a boolean as opened
                boolean opened = true;
                // Now use try exception for opening a line
                try{
                    line = mixer.getLine(lineInfo);
                    opened = line.isOpen() || line instanceof Clip;
                    // Now Check If Line Is not Opened
                    if(!opened){
                        // Open Line
                        line.open();
                    }
                    // Make a float control
                    FloatControl volControl = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                    // Get Current Volume Now
                    float currentVolume = volControl.getValue();
                    // Make a temp double variable and store valuePlusMinus
                    Double volumeToCut = valueToPlusMinus;
                    // Make a float and calculate the addition or subtraction in volume
                    float changedCalc = (float) ((double)volumeToCut);
                    // Now Set This Changed Value Into Volume Line.
                    volControl.setValue(changedCalc);
                    
                }catch (LineUnavailableException lineException){
                }catch (IllegalArgumentException illException){
                }finally{
                    // Close Line If it opened
                    if(line != null && !opened){
                        line.close();
                    }
                }
            }
        }
    }
}


